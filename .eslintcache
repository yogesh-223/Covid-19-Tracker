[{"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\index.js":"1","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\App.js":"2","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\Table.js":"4","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\Map.js":"5","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\LineGraph.js":"6","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\InfoBox.js":"7","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\util.js":"8"},{"size":500,"mtime":1623171630995,"results":"9","hashOfConfig":"10"},{"size":4770,"mtime":1623498788132,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1623171631026,"results":"12","hashOfConfig":"10"},{"size":401,"mtime":1623171630948,"results":"13","hashOfConfig":"10"},{"size":811,"mtime":1623171630901,"results":"14","hashOfConfig":"10"},{"size":2232,"mtime":1623171630839,"results":"15","hashOfConfig":"10"},{"size":1032,"mtime":1623171630823,"results":"16","hashOfConfig":"10"},{"size":1675,"mtime":1623173116859,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"p8mbey",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\index.js",[],["37","38"],"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\App.js",["39"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  CardContent,\n  Card,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./InfoBox.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);{/* all these three are different */}\n          setCountries(countries);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    setLoading(true);\n    const countryCode = event.target.value;\n\n    setCountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    \n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setLoading(false);\n        // console.log([data.countryInfo.lat, data.countryInfo.long]);\n        countryCode === \"worldwide\"\n          ? setMapCenter([34.80746, -40.4796])\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setZoom(4);\n      });\n   console.log(country);\n   // console.log(countryInfo);\n  }\n  \n  ;\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            className=\"infoBox__cases\"\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            total={prettyPrintStat(countryInfo.cases)}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            isloading={isLoading}\n          />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            className=\"infoBox__recovered\"\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            total={prettyPrintStat(countryInfo.recovered)}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            isloading={isLoading}\n          />\n          <InfoBox\n            isGrey\n            active={casesType === \"deaths\"}\n            className=\"infoBox__deaths\"\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            total={prettyPrintStat(countryInfo.deaths)}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            isloading={isLoading}\n          />\n        </div>\n        \n        <Map\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={zoom}\n          casesType={casesType}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app__graphTitle\">WorldWide new {casesType}</h3>\n          <LineGraph className=\"app__graph\" casesType={casesType} />\n        </CardContent>\n        \n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\Table.js",[],"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\Map.js",[],"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\LineGraph.js",[],["40","41"],"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\InfoBox.js",[],"C:\\Users\\siddh\\Desktop\\covid-19-tracker\\src\\util.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":49,"column":33,"nodeType":"48","messageId":"49","endLine":49,"endColumn":70},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["52"],["53"],"no-global-assign","no-unsafe-negation"]